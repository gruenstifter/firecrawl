# apps/api/Dockerfile-coolify
# Stage 1: Base with build tools
FROM node:22 AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
    git \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

RUN corepack enable
WORKDIR /app

# Clone repo with submodules
RUN git clone --recurse-submodules https://github.com/mendableai/firecrawl .

# Stage 2: Go build
FROM golang:1.21 AS go-builder
COPY --from=base /app/apps/api/sharedLibs/go-html-to-md /app/sharedLibs/go-html-to-md
WORKDIR /app/sharedLibs/go-html-to-md
RUN go mod tidy && \
    go build -o html-to-markdown.so -buildmode=c-shared html-to-markdown.go

# Stage 3: Rust build
FROM rust:1-slim AS rust-builder
COPY --from=base /app/apps/api/sharedLibs/html-transformer /app/sharedLibs/html-transformer
WORKDIR /app/sharedLibs/html-transformer
RUN cargo build --release

# Stage 4: Node.js build
FROM base AS build
WORKDIR /app/apps/api
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm install && \
    pnpm run build

# Stage 5: Final production image
FROM node:22-slim
WORKDIR /app

# Copy built artifacts
COPY --from=build /app/apps/api/dist ./dist
COPY --from=build /app/apps/api/node_modules ./node_modules
COPY --from=go-builder /app/sharedLibs/go-html-to-md/html-to-markdown.so ./sharedLibs/go-html-to-md/
COPY --from=rust-builder /app/sharedLibs/html-transformer/target/release/libhtml_transformer.so ./sharedLibs/html-transformer/

# Copy entrypoint script
COPY --from=base /app/apps/api/docker-entrypoint.sh /app/docker-entrypoint.sh

# Runtime dependencies
RUN apt-get update && \
    apt-get install -y \
    git \
    && rm -rf /var/lib/apt/lists/*

# Make sure the entrypoint script has the correct line endings
RUN sed -i 's/\r$//' /app/docker-entrypoint.sh

EXPOSE 3002
ENV PORT=3002
ENV NODE_ENV=production

ENTRYPOINT ["/app/docker-entrypoint.sh"]
